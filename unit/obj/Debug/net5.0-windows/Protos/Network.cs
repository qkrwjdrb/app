// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/network.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NetExchange {

  /// <summary>Holder for reflection information generated from Protos/network.proto</summary>
  public static partial class NetworkReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/network.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NetworkReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRQcm90b3MvbmV0d29yay5wcm90bxIMbmV0X2V4Y2hhbmdlIk8KCUV4TWVz",
            "c2FnZRINCgVyb3V0ZRgBIAEoDRINCgVnd19pZBgCIAEoDRIRCglkZXZpY2Vf",
            "aWQYAyABKAQSEQoJZGF0YV91bml0GAQgASgMMswBCgdFeFByb3RvEj4KBkV4",
            "TGluaxIXLm5ldF9leGNoYW5nZS5FeE1lc3NhZ2UaFy5uZXRfZXhjaGFuZ2Uu",
            "RXhNZXNzYWdlKAEwARI7CgdFeFVuYXJ5EhcubmV0X2V4Y2hhbmdlLkV4TWVz",
            "c2FnZRoXLm5ldF9leGNoYW5nZS5FeE1lc3NhZ2USRAoORXhTZXJ2ZXJzdHJl",
            "YW0SFy5uZXRfZXhjaGFuZ2UuRXhNZXNzYWdlGhcubmV0X2V4Y2hhbmdlLkV4",
            "TWVzc2FnZTABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NetExchange.ExMessage), global::NetExchange.ExMessage.Parser, new[]{ "Route", "GwId", "DeviceId", "DataUnit" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The streaming message
  /// </summary>
  public sealed partial class ExMessage : pb::IMessage<ExMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExMessage> _parser = new pb::MessageParser<ExMessage>(() => new ExMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetExchange.NetworkReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExMessage(ExMessage other) : this() {
      route_ = other.route_;
      gwId_ = other.gwId_;
      deviceId_ = other.deviceId_;
      dataUnit_ = other.dataUnit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExMessage Clone() {
      return new ExMessage(this);
    }

    /// <summary>Field number for the "route" field.</summary>
    public const int RouteFieldNumber = 1;
    private uint route_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Route {
      get { return route_; }
      set {
        route_ = value;
      }
    }

    /// <summary>Field number for the "gw_id" field.</summary>
    public const int GwIdFieldNumber = 2;
    private uint gwId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GwId {
      get { return gwId_; }
      set {
        gwId_ = value;
      }
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 3;
    private ulong deviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = value;
      }
    }

    /// <summary>Field number for the "data_unit" field.</summary>
    public const int DataUnitFieldNumber = 4;
    private pb::ByteString dataUnit_ = pb::ByteString.Empty;
    /// <summary>
    /// Transmission Data Unit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DataUnit {
      get { return dataUnit_; }
      set {
        dataUnit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Route != other.Route) return false;
      if (GwId != other.GwId) return false;
      if (DeviceId != other.DeviceId) return false;
      if (DataUnit != other.DataUnit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Route != 0) hash ^= Route.GetHashCode();
      if (GwId != 0) hash ^= GwId.GetHashCode();
      if (DeviceId != 0UL) hash ^= DeviceId.GetHashCode();
      if (DataUnit.Length != 0) hash ^= DataUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Route != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Route);
      }
      if (GwId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(GwId);
      }
      if (DeviceId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(DeviceId);
      }
      if (DataUnit.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DataUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Route != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Route);
      }
      if (GwId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(GwId);
      }
      if (DeviceId != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(DeviceId);
      }
      if (DataUnit.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(DataUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Route != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Route);
      }
      if (GwId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GwId);
      }
      if (DeviceId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DeviceId);
      }
      if (DataUnit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DataUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExMessage other) {
      if (other == null) {
        return;
      }
      if (other.Route != 0) {
        Route = other.Route;
      }
      if (other.GwId != 0) {
        GwId = other.GwId;
      }
      if (other.DeviceId != 0UL) {
        DeviceId = other.DeviceId;
      }
      if (other.DataUnit.Length != 0) {
        DataUnit = other.DataUnit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Route = input.ReadUInt32();
            break;
          }
          case 16: {
            GwId = input.ReadUInt32();
            break;
          }
          case 24: {
            DeviceId = input.ReadUInt64();
            break;
          }
          case 34: {
            DataUnit = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Route = input.ReadUInt32();
            break;
          }
          case 16: {
            GwId = input.ReadUInt32();
            break;
          }
          case 24: {
            DeviceId = input.ReadUInt64();
            break;
          }
          case 34: {
            DataUnit = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
